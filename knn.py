import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import (
    homogeneity_score,
    completeness_score,
    v_measure_score,
    adjusted_rand_score,
    adjusted_mutual_info_score,
    silhouette_score,
    precision_score,
    recall_score,
    f1_score,
    roc_auc_score
)

# Загружаем данные
data = {
    'Ваш пол': ['Женский', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Женский', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Женский', 'Мужской', 'Мужской', 'Женский', 'Мужской', 'Мужской', 'Женский', 'Женский', 'Мужской', 'Мужской', 'Мужской', 'Мужской', 'Мужской'],
    'Возраст': [22, 22, 22, 22, 21, 22, 21, 21, 22, 22, 22, 21, 21, 21, 21, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 21, 21, 24, 22, 22, 22, 21, 21, 22, 21, 21, 22],
    'Характер': ['Холерик', 'Холерик', 'Меланхолик', 'Флегматик', 'Флегматик', 'Флегматик', 'Флегматик', 'Меланхолик', 'Меланхолик', 'Холерик', 'Меланхолик', 'Флегматик', 'Сангвиник', 'Сангвиник', 'Холерик', 'Холерик', 'Сангвиник', 'Флегматик', 'Меланхолик', 'Флегматик', 'Флегматик', 'Флегматик', 'Флегматик', 'Холерик', 'Сангвиник', 'Сангвиник', 'Флегматик', 'Меланхолик', 'Меланхолик', 'Сангвиник', 'Флегматик', 'Сангвиник', 'Холерик', 'Холерик', 'Меланхолик', 'Сангвиник', 'Меланхолик', 'Меланхолик'],
    'Что вы предпочитаете?': ['Кофе', 'Чай', 'Кофе', 'Чай', 'Чай', 'Кофе', 'Чай', 'Чай', 'Кофе', 'Кофе', 'Чай', 'Чай', 'Кофе', 'Кофе', 'Кофе', 'Чай', 'Кофе', 'Кофе', 'Чай', 'Чай', 'Чай', 'Чай', 'Кофе', 'Чай', 'Чай', 'Кофе', 'Чай', 'Кофе', 'Чай', 'Чай', 'Чай', 'Чай', 'Чай', 'Кофе', 'Кофе', 'Чай', 'Кофе', 'Чай'],
    'Как часто вы берете инициативу в свои руки?': ['Периодически', 'Часто', 'Очень редко', 'Часто', 'Часто', 'Периодически', 'Редко', 'Периодически', 'Периодически', 'Часто', 'Редко', 'Часто', 'Периодически', 'Редко', 'Часто', 'Часто', 'Периодически', 'Редко', 'Периодически', 'Периодически', 'Периодически', 'Периодически', 'Периодически', 'Периодически', 'Очень часто', 'Часто', 'Периодически', 'Редко', 'Периодически', 'Очень часто', 'Очень часто', 'Периодически', 'Периодически', 'Часто', 'Периодически', 'Периодически', 'Периодически', 'Часто'],
    'Как часто вы берете инициативу в свои руки? / Баллы': [3, 4, 1, 4, 4, 3, 2, 3, 3, 4, 2, 4, 3, 2, 4, 4, 3, 2, 3, 3, 3, 3, 3, 3, 5, 4, 3, 2, 3, 5, 5, 3, 3, 4, 3, 3, 3, 4],
    'Как часто вы пропускаете завтраки?': ['Очень часто', 'Очень часто', 'Часто', 'Очень редко', 'Редко', 'Очень часто', 'Часто', 'Редко', 'Очень редко', 'Периодически', 'Очень редко', 'Очень часто', 'Часто', 'Очень часто', 'Очень редко', 'Редко', 'Периодически', 'Часто', 'Периодически', 'Редко', 'Очень редко', 'Часто', 'Часто', 'Часто', 'Очень редко', 'Часто', 'Очень редко', 'Редко', 'Редко', 'Очень часто', 'Очень редко', 'Очень часто', 'Очень редко', 'Очень часто', 'Часто', 'Редко', 'Очень редко', 'Очень часто'],
    'Как часто вы пропускаете завтраки? / Баллы': [5, 5, 4, 1, 2, 5, 4, 2, 1, 3, 1, 5, 4, 5, 1, 2, 3, 4, 3, 2, 1, 4, 4, 4, 1, 4, 1, 2, 2, 5, 1, 5, 1, 5, 4, 2, 1, 5],
    'Сколько спите ночью в среднем': [10, 6, 6, 6, 8, 5, 9, 7, 6, 7, 7, 7, 5, 9, 7, 7, 6, 8, 6, 6, 8, 8, 6, 7, 10, 6, 7, 9, 7, 8, 6, 7, 7, 5, 6, 8, 10, 7],
    'Гипертония': ['Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет'],
    'Курите?': ['Да', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Да'],
    'Пьете энергетики?': ['Да', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Да', 'Да', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Да', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Да'],
    'Бывают ли проблемы со сном?': ['Да', 'Нет', 'Да', 'Да', 'Нет', 'Да', 'Да', 'Да', 'Да', 'Нет', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Да'],
    'Повышенная тревожность?': ['Да', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Да', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Да', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Да', 'Нет', 'Нет'],
    'Проблемы с концентрацией': ['Да', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Нет', 'Нет'],
    'Наличие кофейни возле дома': ['Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Да', 'Да', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет'],
    'Какая культура ближе': ['Очень часто', 'Очень часто', 'Часто', 'Очень редко', 'Редко', 'Очень часто', 'Часто', 'Редко', 'Очень редко', 'Периодически', 'Очень редко', 'Очень часто', 'Часто', 'Очень часто', 'Очень редко', 'Редко', 'Периодически', 'Часто', 'Периодически', 'Редко', 'Очень редко', 'Часто', 'Часто', 'Часто', 'Очень редко', 'Часто', 'Очень редко', 'Редко', 'Редко', 'Очень часто', 'Очень редко', 'Очень часто', 'Очень редко', 'Очень часто', 'Часто', 'Редко', 'Очень редко', 'Очень часто'],
    'Какая культура ближе / Баллы': [2, 1, 1, 0, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 1, 2, 1, 0, 0, 1, 2],
    'Любишь ли горькое': ['Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет'],
    'Занимаетесь спортом?': ['Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Да', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Да', 'Да', 'Нет'],
    'Выпиваете алкоголь': ['Редко', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Редко', 'Да', 'Нет', 'Да', 'Редко', 'Да', 'Редко', 'Редко', 'Редко', 'Редко', 'Редко', 'Да', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Редко', 'Редко', 'Да', 'Да', 'Редко', 'Да', 'Редко', 'Да', 'Нет', 'Да'],
    'Выпиваете алкоголь / Баллы': [1, 0, 2, 0, 0, 2, 0, 0, 2, 2, 2, 1, 2, 0, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 1, 1, 2, 2, 1, 2, 1, 2, 0, 2],
    'Время подъема': [12, 6, 7, 12, 8, 8, 12, 4, 11, 6, 8, 10, 9, 8, 7, 8, 5, 9, 13, 9, 8, 9, 7, 14, 10, 8, 10, 10, 10, 9, 8, 10, 8, 8, 8, 8, 11, 7],
    'Формат работы': ['Не работаю', 'Удаленка', 'Офис', 'Офис', 'Удаленка', 'Гибрид', 'Не работаю', 'Офис', 'Не работаю', 'Офис', 'Не работаю', 'Не работаю', 'Удаленка', 'Офис', 'Гибрид', 'Посменно', 'Офис', 'Не работаю', 'Не работаю', 'Удаленка', 'Не работаю', 'Гибрид', 'Гибрид', 'Не работаю', 'Не работаю', 'Удаленка', 'Не работаю', 'Не работаю', 'Удаленка', 'Гибрид', 'Удаленка', 'Удаленка', 'Гибрид', 'Гибрид', 'Гибрид', 'Офис', 'Удаленка', 'Гибрид'],
    'Любите сладкое?': ['Да', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Да', 'Да', 'Да', 'Да', 'Да', 'Да', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Да', 'Да', 'Да', 'Да', 'Нет', 'Да', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Да', 'Да', 'Нет', 'Да', 'Да', 'Нет'],
    'Любимое время года?': ['Весна', 'Весна', 'Весна', 'Лето', 'Осень', 'Весна', 'Весна', 'Зима', 'Зима', 'Лето', 'Осень', 'Зима', 'Зима', 'Зима', 'Лето', 'Лето', 'Осень', 'Зима', 'Зима', 'Осень', 'Лето', 'Весна', 'Лето', 'Весна', 'Зима', 'Осень', 'Лето', 'Весна', 'Лето', 'Лето', 'Лето', 'Весна', 'Весна', 'Лето', 'Весна', 'Весна', 'Зима', 'Лето'],
    'Любимое время года? / Баллы': [2, 2, 2, 3, 4, 2, 2, 1, 1, 3, 4, 1, 1, 1, 3, 3, 4, 1, 1, 4, 3, 2, 3, 2, 1, 4, 3, 2, 3, 3, 3, 2, 2, 3, 2, 2, 1, 3],
    'Что пьют родители': ['Чай и кофе', 'Чай', 'Кофе', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Кофе', 'Чай и кофе', 'Чай и кофе', 'Чай', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Кофе', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Кофе', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Чай и кофе', 'Чай', 'Чай и кофе', 'Чай', 'Чай', 'Чай', 'Чай', 'Чай и кофе', 'Чай и кофе', 'Кофе', 'Чай и кофе', 'Чай и кофе'],
    'Что пьют родители / Баллы': [2, 1, 0, 2, 2, 2, 2, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 0, 2, 2],
    'Какие напитки любите': ['Холодные', 'Холодные', 'Холодные', 'Холодные', 'Горячие', 'Холодные', 'Горячие', 'Горячие', 'Холодные', 'Горячие', 'Горячие', 'Холодные', 'Горячие', 'Холодные', 'Горячие', 'Холодные', 'Горячие', 'Холодные', 'Горячие', 'Холодные', 'Холодные', 'Горячие', 'Холодные', 'Холодные', 'Горячие', 'Холодные', 'Холодные', 'Холодные', 'Горячие', 'Холодные', 'Горячие', 'Холодные', 'Горячие', 'Горячие', 'Холодные', 'Холодные', 'Горячие', 'Горячие'],
    'Какие напитки любите / Баллы': [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1],
    'Азартен?': ['Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Да', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Да', 'Нет', 'Нет', 'Нет', 'Нет', 'Да'],
}
df = pd.DataFrame(data)

# Преобразование категориальных признаков в числовые
le = LabelEncoder()
for column in df.columns:
    if df[column].dtype == 'object':
        df[column] = le.fit_transform(df[column])

# Разделение данных на обучающую и тестовую выборки
X = df.drop('Что вы предпочитаете?', axis=1)
y = df['Что вы предпочитаете?']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Тестирование различных значений k
best_k = 1
best_scores = {
    'Test Homogeneity': 0,
    'Test Completeness': 0,
    'Test V_measure': 0,
    'Test Adjusted_rand': 0,
    'Test Adjusted_mutual_info': 0,
    'Test Silhouette': 0,
    'Test Precision': 0,
    'Test Recall': 0,
    'Test F1': 0,
    'Test Roc_auc': 0
}

for k in range(1, 11):
    model = KNeighborsClassifier(n_neighbors=k)
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)

    # Рассчет метрик
    scores = {
        'Test Homogeneity': homogeneity_score(y_test, y_pred),
        'Test Completeness': completeness_score(y_test, y_pred),
        'Test V_measure': v_measure_score(y_test, y_pred),
        'Test Adjusted_rand': adjusted_rand_score(y_test, y_pred),
        'Test Adjusted_mutual_info': adjusted_mutual_info_score(y_test, y_pred),
        'Test Silhouette': silhouette_score(X_test, y_pred),
        'Test Precision': precision_score(y_test, y_pred),
        'Test Recall': recall_score(y_test, y_pred),
        'Test F1': f1_score(y_test, y_pred),
        'Test Roc_auc': roc_auc_score(y_test, y_pred)
    }

    print(f'k={k}:')
    for metric_name, score in scores.items():
        print(f'  {metric_name}: {score}')

    # Выбор лучшего k
    if any(score > best_scores[metric_name] for metric_name, score in scores.items()):
        best_k = k
        best_scores = scores

print(f'Лучшее k: {best_k}')
print(f'С лучшими метриками:')
for metric_name, score in best_scores.items():
    print(f'  {metric_name}: {score}')